// <auto-generated />
using System;
using GBCSporting2021_ACH.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GBCSporting2021_ACH.Migrations
{
    [DbContext(typeof(SportingContext))]
    [Migration("20210408231607_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GBCSporting2021_ACH.Models.Country", b =>
                {
                    b.Property<int>("CountryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CountryID");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            CountryID = 1,
                            Name = "United States of America"
                        },
                        new
                        {
                            CountryID = 2,
                            Name = "Canada"
                        },
                        new
                        {
                            CountryID = 3,
                            Name = "South Korea"
                        });
                });

            modelBuilder.Entity("GBCSporting2021_ACH.Models.Customer", b =>
                {
                    b.Property<int>("CustomerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(51)")
                        .HasMaxLength(51);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(51)")
                        .HasMaxLength(51);

                    b.Property<int>("CountryID")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(51)")
                        .HasMaxLength(51);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(51)")
                        .HasMaxLength(51);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(51)")
                        .HasMaxLength(51);

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(21)")
                        .HasMaxLength(21);

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(51)")
                        .HasMaxLength(51);

                    b.HasKey("CustomerID");

                    b.HasIndex("CountryID");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerID = 1,
                            Address = "123 Main street",
                            City = "San Francisco",
                            CountryID = 1,
                            Email = "kanthoni@pge.com",
                            FirstName = "Kaitlyn",
                            LastName = "Anthoni",
                            Phone = "144-125-1251",
                            PostalCode = "94016",
                            State = "California"
                        });
                });

            modelBuilder.Entity("GBCSporting2021_ACH.Models.Incident", b =>
                {
                    b.Property<int>("IncidentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateClosed")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOpened")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.Property<int?>("TechnicianID")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IncidentID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("ProductID");

                    b.HasIndex("TechnicianID");

                    b.ToTable("Incidents");
                });

            modelBuilder.Entity("GBCSporting2021_ACH.Models.Product", b =>
                {
                    b.Property<int>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateReleased")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ProductID");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductID = 1,
                            Code = "TRNY10",
                            DateReleased = new DateTime(2015, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Tournament Master 1.0",
                            Price = 4.99m
                        },
                        new
                        {
                            ProductID = 2,
                            Code = "LEAG10",
                            DateReleased = new DateTime(2016, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "League Scheduler 1.0",
                            Price = 4.99m
                        },
                        new
                        {
                            ProductID = 3,
                            Code = "LEAGD10",
                            DateReleased = new DateTime(2016, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "League Scheduler Deluxe 1.0",
                            Price = 7.99m
                        },
                        new
                        {
                            ProductID = 4,
                            Code = "DRAFT10",
                            DateReleased = new DateTime(2017, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Draft Master 1.0",
                            Price = 4.99m
                        },
                        new
                        {
                            ProductID = 5,
                            Code = "TEAM10",
                            DateReleased = new DateTime(2017, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Team Manager 1.0",
                            Price = 4.99m
                        },
                        new
                        {
                            ProductID = 6,
                            Code = "TRNY20",
                            DateReleased = new DateTime(2018, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Tournament Master 2.0",
                            Price = 5.99m
                        },
                        new
                        {
                            ProductID = 7,
                            Code = "DRAFT20",
                            DateReleased = new DateTime(2019, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Draft Master 2.0",
                            Price = 5.99m
                        });
                });

            modelBuilder.Entity("GBCSporting2021_ACH.Models.Registration", b =>
                {
                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.HasKey("CustomerID", "ProductID")
                        .HasName("PrimaryKey_RegistrationID");

                    b.HasIndex("ProductID");

                    b.ToTable("Registrations");
                });

            modelBuilder.Entity("GBCSporting2021_ACH.Models.Technician", b =>
                {
                    b.Property<int>("TechnicianID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TechnicianID");

                    b.ToTable("Technicians");

                    b.HasData(
                        new
                        {
                            TechnicianID = 1,
                            Email = "alison@sportsprosoftware.com",
                            Name = "Alison Diaz",
                            Phone = "800-555-0443"
                        },
                        new
                        {
                            TechnicianID = 2,
                            Email = "awilson@sportsprosoftware.com",
                            Name = "Andrew Wilson",
                            Phone = "800-555-0449"
                        },
                        new
                        {
                            TechnicianID = 3,
                            Email = "gfiori@sportsprosoftware.com",
                            Name = "Gina Fiori",
                            Phone = "800-555-0459"
                        },
                        new
                        {
                            TechnicianID = 4,
                            Email = "gunter@sportsprosoftware.com",
                            Name = "Gunter Wendt",
                            Phone = "800-555-0400"
                        },
                        new
                        {
                            TechnicianID = 5,
                            Email = "jason@sportsprosoftware.com",
                            Name = "Jason Lee",
                            Phone = "800-555-0444"
                        });
                });

            modelBuilder.Entity("GBCSporting2021_ACH.Models.Customer", b =>
                {
                    b.HasOne("GBCSporting2021_ACH.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GBCSporting2021_ACH.Models.Incident", b =>
                {
                    b.HasOne("GBCSporting2021_ACH.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GBCSporting2021_ACH.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GBCSporting2021_ACH.Models.Technician", "Technician")
                        .WithMany()
                        .HasForeignKey("TechnicianID");
                });

            modelBuilder.Entity("GBCSporting2021_ACH.Models.Registration", b =>
                {
                    b.HasOne("GBCSporting2021_ACH.Models.Customer", "Customer")
                        .WithMany("Registrations")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GBCSporting2021_ACH.Models.Product", "Product")
                        .WithMany("Registrations")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
